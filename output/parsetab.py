
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNPLUSASSIGNPLUSONEMINUSASSIGNMINUSONErightIFELSEleftANDleftORrightNOTnonassocINleftEQNEQGTGTELTLTEleftPLUSMINleftTIMESDIVMODleftPOWrightUMINUSnonassocLPARENAND ASSIGN BOOLEAN COLON COMMA CONTINUE DED DEL DIV ELIF ELSE EQ FUN GT GTE ID IF IN IND INFIX LBRACKET LPAREN LT LTE MIN MINUSASSIGN MINUSONE MOD NEQ NL NONE NOT NUMBER OR PASS PLUS PLUSASSIGN PLUSONE POW RBRACKET RETURN RPAREN SEMICOLON STRING TIMES WHILE\n        block : statement\n              | block NL\n              | block NL statement\n        \n        statement : WHILE expression COLON IND block DED\n        \n        statement : CONTINUE\n                  | PASS\n        \n        statement : expression\n        \n        conditional : IF expression COLON IND block DED\n                    | conditional ELIF expression COLON IND block DED\n                    | conditional NL\n        statement : conditional\n                  | conditional ELSE COLON IND block DED\n        \n        expression : expression LPAREN parameters RPAREN\n                   | expression LPAREN RPAREN\n                   | expression ID expression\n        parameters : expression\n                   | parameters COMMA expression\n        \n        expression : INFIX function_definition\n                   | function_definition\n        function_definition : FUN LPAREN declaration RPAREN COLON IND block DED\n                            | FUN LPAREN ID RPAREN COLON IND block DED\n                            | FUN LPAREN RPAREN COLON IND block DED\n        declaration : ID COMMA ID\n                    | declaration COMMA ID\n        \n        expression : LBRACKET matrix RBRACKET\n                   | LBRACKET expression RBRACKET\n                   | LBRACKET RBRACKET\n        matrix : expression COMMA expression\n               | matrix COMMA expression\n               | expression SEMICOLON expression\n               | matrix SEMICOLON expression\n        \n        statement : RETURN expression\n        \n        expression : ID ASSIGN expression\n                   | ID PLUSASSIGN expression\n                   | ID PLUSONE\n                   | ID MINUSASSIGN expression\n                   | ID MINUSONE\n                   | DEL ID\n        \n        expression : ID\n        \n        expression : MIN expression %prec UMINUS\n        expression : NOT expression\n        \n        expression : expression PLUS expression\n                   | expression MIN expression\n                   | expression TIMES expression\n                   | expression DIV expression\n                   | expression MOD expression\n                   | expression POW expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression IF expression\n                   | expression IN expression\n        \n        expression : expression EQ expression\n                   | expression NEQ expression\n                   | expression LT expression\n                   | expression LTE expression\n                   | expression GT expression\n                   | expression GTE expression\n        \n        expression : expression IF expression ELSE expression\n        \n        expression : NUMBER\n                   | BOOLEAN\n                   | STRING\n                   | NONE\n        \n        expression : LPAREN expression RPAREN\n        '
    
_lr_action_items = {'WHILE':([0,23,100,104,110,120,124,131,133,],[3,3,3,3,3,3,3,3,3,]),'CONTINUE':([0,23,100,104,110,120,124,131,133,],[5,5,5,5,5,5,5,5,5,]),'PASS':([0,23,100,104,110,120,124,131,133,],[6,6,6,6,6,6,6,6,6,]),'RETURN':([0,23,100,104,110,120,124,131,133,],[8,8,8,8,8,8,8,8,8,]),'INFIX':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LBRACKET':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ID':([0,3,4,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,100,101,102,103,104,106,107,108,109,110,112,115,117,118,120,124,131,133,136,138,139,],[10,10,26,10,10,-39,-19,10,57,10,10,10,-59,-60,-61,-62,10,26,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,26,26,10,10,-35,10,-37,-18,-27,26,-38,-40,-41,26,99,26,-14,26,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,26,-63,-33,-34,-36,-25,10,10,-26,10,10,10,-13,10,10,10,26,26,26,26,10,123,126,26,-58,10,10,10,10,-22,-20,-21,]),'DEL':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'MIN':([0,3,4,8,9,10,12,13,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,46,47,48,49,50,51,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,100,101,102,103,104,106,107,108,109,110,117,118,120,124,131,133,136,138,139,],[15,15,28,15,15,-39,-19,15,15,15,15,-59,-60,-61,-62,15,28,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,28,28,15,15,-35,15,-37,-18,-27,28,-38,-40,28,28,28,-14,28,-42,-43,-44,-45,-46,-47,28,28,28,28,28,28,28,28,28,28,28,-63,28,28,28,-25,15,15,-26,15,15,15,-13,15,15,15,28,28,28,28,15,28,28,15,15,15,15,-22,-20,-21,]),'NOT':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'NUMBER':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'BOOLEAN':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'STRING':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'NONE':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LPAREN':([0,3,4,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,46,47,48,49,50,51,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,100,101,102,103,104,106,107,108,109,110,117,118,120,124,131,133,136,138,139,],[9,9,25,9,9,-39,-19,9,9,9,9,-59,-60,-61,-62,61,9,25,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,25,25,9,9,-35,9,-37,-18,-27,25,-38,25,25,25,25,-14,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-63,25,25,25,-25,9,9,-26,9,9,9,-13,9,9,9,25,25,25,25,9,25,25,9,9,9,9,-22,-20,-21,]),'IF':([0,4,10,12,18,19,20,21,23,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,100,101,104,106,107,108,109,110,117,118,120,124,131,133,136,138,139,],[17,35,-39,-19,-59,-60,-61,-62,17,35,35,35,-35,-37,-18,-27,35,-38,-40,-41,35,35,-14,35,-42,-43,-44,-45,-46,-47,-48,-49,35,-51,-52,-53,-54,-55,-56,-57,35,-63,35,35,35,-25,-26,17,-13,17,35,35,35,35,17,35,35,17,17,17,17,-22,-20,-21,]),'FUN':([0,3,8,9,11,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'$end':([1,2,4,5,6,7,10,12,18,19,20,21,23,45,46,50,52,53,55,57,58,59,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,118,127,128,130,134,136,138,139,],[0,-1,-7,-5,-6,-11,-39,-19,-59,-60,-61,-62,-2,-10,-32,-35,-37,-18,-27,-38,-40,-41,-3,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,-58,-4,-12,-8,-9,-22,-20,-21,]),'NL':([1,2,4,5,6,7,10,12,18,19,20,21,23,45,46,50,52,53,55,57,58,59,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,116,118,119,121,127,128,129,130,132,134,135,136,137,138,139,],[23,-1,-7,-5,-6,45,-39,-19,-59,-60,-61,-62,-2,-10,-32,-35,-37,-18,-27,-38,-40,-41,-3,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,23,-58,23,23,-4,-12,23,-8,23,-9,23,-22,23,-20,-21,]),'DED':([2,4,5,6,7,10,12,18,19,20,21,23,45,46,50,52,53,55,57,58,59,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,116,118,119,121,127,128,129,130,132,134,135,136,137,138,139,],[-1,-7,-5,-6,-11,-39,-19,-59,-60,-61,-62,-2,-10,-32,-35,-37,-18,-27,-38,-40,-41,-3,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,127,-58,128,130,-4,-12,134,-8,136,-9,138,-22,139,-20,-21,]),'PLUS':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[27,-39,-19,-59,-60,-61,-62,27,27,27,-35,-37,-18,-27,27,-38,-40,27,27,27,-14,27,-42,-43,-44,-45,-46,-47,27,27,27,27,27,27,27,27,27,27,27,-63,27,27,27,-25,-26,-13,27,27,27,27,27,27,-22,-20,-21,]),'TIMES':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[29,-39,-19,-59,-60,-61,-62,29,29,29,-35,-37,-18,-27,29,-38,-40,29,29,29,-14,29,29,29,-44,-45,-46,-47,29,29,29,29,29,29,29,29,29,29,29,-63,29,29,29,-25,-26,-13,29,29,29,29,29,29,-22,-20,-21,]),'DIV':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[30,-39,-19,-59,-60,-61,-62,30,30,30,-35,-37,-18,-27,30,-38,-40,30,30,30,-14,30,30,30,-44,-45,-46,-47,30,30,30,30,30,30,30,30,30,30,30,-63,30,30,30,-25,-26,-13,30,30,30,30,30,30,-22,-20,-21,]),'MOD':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[31,-39,-19,-59,-60,-61,-62,31,31,31,-35,-37,-18,-27,31,-38,-40,31,31,31,-14,31,31,31,-44,-45,-46,-47,31,31,31,31,31,31,31,31,31,31,31,-63,31,31,31,-25,-26,-13,31,31,31,31,31,31,-22,-20,-21,]),'POW':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[32,-39,-19,-59,-60,-61,-62,32,32,32,-35,-37,-18,-27,32,-38,-40,32,32,32,-14,32,32,32,32,32,32,-47,32,32,32,32,32,32,32,32,32,32,32,-63,32,32,32,-25,-26,-13,32,32,32,32,32,32,-22,-20,-21,]),'AND':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[33,-39,-19,-59,-60,-61,-62,33,33,33,-35,-37,-18,-27,33,-38,-40,-41,33,33,-14,33,-42,-43,-44,-45,-46,-47,-48,-49,33,-51,-52,-53,-54,-55,-56,-57,33,-63,33,33,33,-25,-26,-13,33,33,33,33,33,33,-22,-20,-21,]),'OR':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[34,-39,-19,-59,-60,-61,-62,34,34,34,-35,-37,-18,-27,34,-38,-40,-41,34,34,-14,34,-42,-43,-44,-45,-46,-47,34,-49,34,-51,-52,-53,-54,-55,-56,-57,34,-63,34,34,34,-25,-26,-13,34,34,34,34,34,34,-22,-20,-21,]),'IN':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[36,-39,-19,-59,-60,-61,-62,36,36,36,-35,-37,-18,-27,36,-38,-40,36,36,36,-14,36,-42,-43,-44,-45,-46,-47,36,36,36,None,-52,-53,-54,-55,-56,-57,36,-63,36,36,36,-25,-26,-13,36,36,36,36,36,36,-22,-20,-21,]),'EQ':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[37,-39,-19,-59,-60,-61,-62,37,37,37,-35,-37,-18,-27,37,-38,-40,37,37,37,-14,37,-42,-43,-44,-45,-46,-47,37,37,37,37,-52,-53,-54,-55,-56,-57,37,-63,37,37,37,-25,-26,-13,37,37,37,37,37,37,-22,-20,-21,]),'NEQ':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[38,-39,-19,-59,-60,-61,-62,38,38,38,-35,-37,-18,-27,38,-38,-40,38,38,38,-14,38,-42,-43,-44,-45,-46,-47,38,38,38,38,-52,-53,-54,-55,-56,-57,38,-63,38,38,38,-25,-26,-13,38,38,38,38,38,38,-22,-20,-21,]),'LT':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[39,-39,-19,-59,-60,-61,-62,39,39,39,-35,-37,-18,-27,39,-38,-40,39,39,39,-14,39,-42,-43,-44,-45,-46,-47,39,39,39,39,-52,-53,-54,-55,-56,-57,39,-63,39,39,39,-25,-26,-13,39,39,39,39,39,39,-22,-20,-21,]),'LTE':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[40,-39,-19,-59,-60,-61,-62,40,40,40,-35,-37,-18,-27,40,-38,-40,40,40,40,-14,40,-42,-43,-44,-45,-46,-47,40,40,40,40,-52,-53,-54,-55,-56,-57,40,-63,40,40,40,-25,-26,-13,40,40,40,40,40,40,-22,-20,-21,]),'GT':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[41,-39,-19,-59,-60,-61,-62,41,41,41,-35,-37,-18,-27,41,-38,-40,41,41,41,-14,41,-42,-43,-44,-45,-46,-47,41,41,41,41,-52,-53,-54,-55,-56,-57,41,-63,41,41,41,-25,-26,-13,41,41,41,41,41,41,-22,-20,-21,]),'GTE':([4,10,12,18,19,20,21,24,46,47,50,52,53,55,56,57,58,59,60,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,101,106,107,108,109,117,118,136,138,139,],[42,-39,-19,-59,-60,-61,-62,42,42,42,-35,-37,-18,-27,42,-38,-40,42,42,42,-14,42,-42,-43,-44,-45,-46,-47,42,42,42,42,-52,-53,-54,-55,-56,-57,42,-63,42,42,42,-25,-26,-13,42,42,42,42,42,42,-22,-20,-21,]),'ELSE':([7,10,12,18,19,20,21,45,50,52,53,55,57,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,118,130,134,136,138,139,],[43,-39,-19,-59,-60,-61,-62,-10,-35,-37,-18,-27,-38,-40,-41,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,103,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,-58,-8,-9,-22,-20,-21,]),'ELIF':([7,45,130,134,],[44,-10,-8,-9,]),'ASSIGN':([10,],[48,]),'PLUSASSIGN':([10,],[49,]),'PLUSONE':([10,],[50,]),'MINUSASSIGN':([10,],[51,]),'MINUSONE':([10,],[52,]),'COLON':([10,12,18,19,20,21,24,43,50,52,53,55,57,58,59,60,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,93,98,101,111,114,118,136,138,139,],[-39,-19,-59,-60,-61,-62,63,84,-35,-37,-18,-27,-38,-40,-41,96,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,105,-63,-33,-34,-36,-25,-26,113,-13,122,125,-58,-22,-20,-21,]),'RPAREN':([10,12,18,19,20,21,25,47,50,52,53,55,57,58,59,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,97,99,101,117,118,123,126,136,138,139,],[-39,-19,-59,-60,-61,-62,66,86,-35,-37,-18,-27,-38,-40,-41,98,-16,101,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,111,114,-13,-17,-58,-24,-23,-22,-20,-21,]),'RBRACKET':([10,12,13,18,19,20,21,50,52,53,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,106,107,108,109,118,136,138,139,],[-39,-19,55,-59,-60,-61,-62,-35,-37,-18,90,-27,93,-38,-40,-41,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,-29,-31,-28,-30,-58,-22,-20,-21,]),'COMMA':([10,12,18,19,20,21,50,52,53,54,55,56,57,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,97,99,101,106,107,108,109,117,118,123,126,136,138,139,],[-39,-19,-59,-60,-61,-62,-35,-37,-18,91,-27,94,-38,-40,-41,-16,102,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,112,115,-13,-29,-31,-28,-30,-17,-58,-24,-23,-22,-20,-21,]),'SEMICOLON':([10,12,18,19,20,21,50,52,53,54,55,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,93,101,106,107,108,109,118,136,138,139,],[-39,-19,-59,-60,-61,-62,-35,-37,-18,92,-27,95,-38,-40,-41,-14,-15,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-63,-33,-34,-36,-25,-26,-13,-29,-31,-28,-30,-58,-22,-20,-21,]),'IND':([63,84,96,105,113,122,125,],[100,104,110,120,124,131,133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,100,104,110,120,124,131,133,],[1,116,119,121,129,132,135,137,]),'statement':([0,23,100,104,110,120,124,131,133,],[2,62,2,2,2,2,2,2,2,]),'expression':([0,3,8,9,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[4,24,46,47,56,58,59,60,4,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,87,88,89,106,107,108,109,4,117,118,4,4,4,4,4,4,]),'conditional':([0,23,100,104,110,120,124,131,133,],[7,7,7,7,7,7,7,7,7,]),'function_definition':([0,3,8,9,11,13,15,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,48,49,51,91,92,94,95,100,102,103,104,110,120,124,131,133,],[12,12,12,12,53,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'matrix':([13,],[54,]),'parameters':([25,],[65,]),'declaration':([61,],[97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> statement','block',1,'p_program','parser.py',30),
  ('block -> block NL','block',2,'p_program','parser.py',31),
  ('block -> block NL statement','block',3,'p_program','parser.py',32),
  ('statement -> WHILE expression COLON IND block DED','statement',6,'p_while_block','parser.py',47),
  ('statement -> CONTINUE','statement',1,'p_simple_statements','parser.py',54),
  ('statement -> PASS','statement',1,'p_simple_statements','parser.py',55),
  ('statement -> expression','statement',1,'p_convert_expressions','parser.py',65),
  ('conditional -> IF expression COLON IND block DED','conditional',6,'p_conditional_block','parser.py',71),
  ('conditional -> conditional ELIF expression COLON IND block DED','conditional',7,'p_conditional_block','parser.py',72),
  ('conditional -> conditional NL','conditional',2,'p_conditional_block','parser.py',73),
  ('statement -> conditional','statement',1,'p_conditional_block','parser.py',74),
  ('statement -> conditional ELSE COLON IND block DED','statement',6,'p_conditional_block','parser.py',75),
  ('expression -> expression LPAREN parameters RPAREN','expression',4,'p_function_call','parser.py',94),
  ('expression -> expression LPAREN RPAREN','expression',3,'p_function_call','parser.py',95),
  ('expression -> expression ID expression','expression',3,'p_function_call','parser.py',96),
  ('parameters -> expression','parameters',1,'p_function_call','parser.py',97),
  ('parameters -> parameters COMMA expression','parameters',3,'p_function_call','parser.py',98),
  ('expression -> INFIX function_definition','expression',2,'p_function_definition','parser.py',120),
  ('expression -> function_definition','expression',1,'p_function_definition','parser.py',121),
  ('function_definition -> FUN LPAREN declaration RPAREN COLON IND block DED','function_definition',8,'p_function_definition','parser.py',122),
  ('function_definition -> FUN LPAREN ID RPAREN COLON IND block DED','function_definition',8,'p_function_definition','parser.py',123),
  ('function_definition -> FUN LPAREN RPAREN COLON IND block DED','function_definition',7,'p_function_definition','parser.py',124),
  ('declaration -> ID COMMA ID','declaration',3,'p_function_definition','parser.py',125),
  ('declaration -> declaration COMMA ID','declaration',3,'p_function_definition','parser.py',126),
  ('expression -> LBRACKET matrix RBRACKET','expression',3,'p_matrix','parser.py',156),
  ('expression -> LBRACKET expression RBRACKET','expression',3,'p_matrix','parser.py',157),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_matrix','parser.py',158),
  ('matrix -> expression COMMA expression','matrix',3,'p_matrix','parser.py',159),
  ('matrix -> matrix COMMA expression','matrix',3,'p_matrix','parser.py',160),
  ('matrix -> expression SEMICOLON expression','matrix',3,'p_matrix','parser.py',161),
  ('matrix -> matrix SEMICOLON expression','matrix',3,'p_matrix','parser.py',162),
  ('statement -> RETURN expression','statement',2,'p_return_statement','parser.py',187),
  ('expression -> ID ASSIGN expression','expression',3,'p_change_variable','parser.py',193),
  ('expression -> ID PLUSASSIGN expression','expression',3,'p_change_variable','parser.py',194),
  ('expression -> ID PLUSONE','expression',2,'p_change_variable','parser.py',195),
  ('expression -> ID MINUSASSIGN expression','expression',3,'p_change_variable','parser.py',196),
  ('expression -> ID MINUSONE','expression',2,'p_change_variable','parser.py',197),
  ('expression -> DEL ID','expression',2,'p_change_variable','parser.py',198),
  ('expression -> ID','expression',1,'p_variable_access','parser.py',204),
  ('expression -> MIN expression','expression',2,'p_unary_operators','parser.py',210),
  ('expression -> NOT expression','expression',2,'p_unary_operators','parser.py',211),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',217),
  ('expression -> expression MIN expression','expression',3,'p_binary_operators','parser.py',218),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',219),
  ('expression -> expression DIV expression','expression',3,'p_binary_operators','parser.py',220),
  ('expression -> expression MOD expression','expression',3,'p_binary_operators','parser.py',221),
  ('expression -> expression POW expression','expression',3,'p_binary_operators','parser.py',222),
  ('expression -> expression AND expression','expression',3,'p_binary_operators','parser.py',223),
  ('expression -> expression OR expression','expression',3,'p_binary_operators','parser.py',224),
  ('expression -> expression IF expression','expression',3,'p_binary_operators','parser.py',225),
  ('expression -> expression IN expression','expression',3,'p_binary_operators','parser.py',226),
  ('expression -> expression EQ expression','expression',3,'p_comparison','parser.py',232),
  ('expression -> expression NEQ expression','expression',3,'p_comparison','parser.py',233),
  ('expression -> expression LT expression','expression',3,'p_comparison','parser.py',234),
  ('expression -> expression LTE expression','expression',3,'p_comparison','parser.py',235),
  ('expression -> expression GT expression','expression',3,'p_comparison','parser.py',236),
  ('expression -> expression GTE expression','expression',3,'p_comparison','parser.py',237),
  ('expression -> expression IF expression ELSE expression','expression',5,'p_ternary_operators','parser.py',243),
  ('expression -> NUMBER','expression',1,'p_primitives','parser.py',249),
  ('expression -> BOOLEAN','expression',1,'p_primitives','parser.py',250),
  ('expression -> STRING','expression',1,'p_primitives','parser.py',251),
  ('expression -> NONE','expression',1,'p_primitives','parser.py',252),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parantheses','parser.py',258),
]
